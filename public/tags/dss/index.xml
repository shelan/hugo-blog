<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dss on My blog is awesome</title>
    <link>http://localhost:1313/tags/dss/</link>
    <description>Recent content in Dss on My blog is awesome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Mon, 05 Mar 2012 23:43:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dss/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to call MySQL stored procedures from WSO2 Data Services Server</title>
      <link>http://localhost:1313/post/how-to-call-mysql-stored-procedures-from-wso2-data-services-server/</link>
      <pubDate>Mon, 05 Mar 2012 23:43:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/how-to-call-mysql-stored-procedures-from-wso2-data-services-server/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;&amp;nbsp;Stored procedures allows you to expose pre defined queries as an api allowing users to consume them in a much faster way.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Requirements.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.mysql.com/downloads/&#34; target=&#34;_blank&#34;&gt;MySQL Database server&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;http://wso2.org/downloads/dss/&#34; target=&#34;_blank&#34;&gt;WSO2 Data Service Server (DSS) 2.6.3&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;http://www.mysql.com/downloads/connector/j/&#34; target=&#34;_blank&#34;&gt;MySQL JDBC driver&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Note: &amp;lt;DSS_HOME&amp;gt; is the root folder of your unpacked DSS server.&lt;br /&gt;&lt;br /&gt;1.) Unpack WSO2 DSS and drop MySQL JDBC driver in &amp;lt;DSS_HOME&amp;gt;/repository/componets/lib folder.&lt;br /&gt;2) Start the server using the start script &amp;lt;DSS_HOME&amp;gt;/bin/wso2server.sh &amp;nbsp;(In linux or wso2server.bat in windows)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Prepare Database&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;use following&amp;nbsp;queries&amp;nbsp;to generate a database with a stored procedure. [1]&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;DROP DATABASE IF EXISTS DATASERVICE_SAMPLE;&lt;br /&gt;CREATE DATABASE DATASERVICE_SAMPLE;&lt;br /&gt;GRANT ALL ON DATASERVICE_SAMPLE.* TO &#39;dsuser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;user123&#39;;&lt;br /&gt;&lt;br /&gt;USE DATASERVICE_SAMPLE;&lt;br /&gt;&lt;br /&gt;DROP TABLE IF EXISTS Employees;&lt;br /&gt;&lt;br /&gt;CREATE TABLE Employees(&lt;br /&gt;        employeeNumber INTEGER,&lt;br /&gt;        lastName VARCHAR(50),&lt;br /&gt;        firstName VARCHAR(50),&lt;br /&gt;        extension VARCHAR(10),&lt;br /&gt;        email VARCHAR(100),&lt;br /&gt;        officeCode VARCHAR(10),&lt;br /&gt;        reportsTo INTEGER,&lt;br /&gt;        jobTitle VARCHAR(50) &lt;br /&gt;);&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;insert into Employees values (1002,&#39;Murphy&#39;,&#39;Diane&#39;,&#39;x5800&#39;,&#39;dmurphy@classicmodelcars.com&#39;,&#39;1&#39;,null,&#39;President&#39;);&lt;br /&gt;insert into Employees values (1056,&#39;Patterson&#39;,&#39;Mary&#39;,&#39;x4611&#39;,&#39;mpatterso@classicmodelcars.com&#39;,&#39;1&#39;,1002,&#39;VP Sales&#39;);&lt;br /&gt;insert into Employees values (1076,&#39;Firrelli&#39;,&#39;Jeff&#39;,&#39;x9273&#39;,&#39;jfirrelli@classicmodelcars.com&#39;,&#39;1&#39;,1002,&#39;VP Marketing&#39;);&lt;br /&gt;insert into Employees values (1088,&#39;Patterson&#39;,&#39;William&#39;,&#39;x4871&#39;,&#39;wpatterson@classicmodelcars.com&#39;,&#39;6&#39;,1056,&#39;Sales Manager (APAC)&#39;);&lt;br /&gt;insert into Employees values (1102,&#39;Bondur&#39;,&#39;Gerard&#39;,&#39;x5408&#39;,&#39;gbondur@classicmodelcars.com&#39;,&#39;4&#39;,1056,&#39;Sale Manager (EMEA)&#39;);&lt;br /&gt;insert into Employees values (1143,&#39;Bow&#39;,&#39;Anthony&#39;,&#39;x5428&#39;,&#39;abow@classicmodelcars.com&#39;,&#39;1&#39;,1056,&#39;Sales Manager (NA)&#39;);&lt;br /&gt;insert into Employees values (1165,&#39;Jennings&#39;,&#39;Leslie&#39;,&#39;x3291&#39;,&#39;ljennings@classicmodelcars.com&#39;,&#39;1&#39;,1143,&#39;Sales Rep&#39;);&lt;br /&gt;&lt;br /&gt;DROP PROCEDURE If EXISTS getEmployee;&lt;br /&gt;CREATE PROCEDURE getEmployee(empNo INTEGER) SELECT employeeNumber,lastName,firstName,email FROM Employees where employeeNumber = empNo;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;b&gt;&amp;nbsp;Create Data Service.&lt;/b&gt;&lt;br /&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;1) click on DataService -----&amp;gt; Create&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2) Add new Data Source.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-bWJeje9EPrs/T1W9VhFX-5I/AAAAAAAAAr8/kgUm8loUbPI/s1600/datasource.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;276&#34; src=&#34;http://4.bp.blogspot.com/-bWJeje9EPrs/T1W9VhFX-5I/AAAAAAAAAr8/kgUm8loUbPI/s640/datasource.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3) Click next and Add new Query.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-yAQFie2H-_s/T1W9wmJ2yDI/AAAAAAAAAsE/z4BNaAvwqD4/s1600/sql-query.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;276&#34; src=&#34;http://3.bp.blogspot.com/-yAQFie2H-_s/T1W9wmJ2yDI/AAAAAAAAAsE/z4BNaAvwqD4/s640/sql-query.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here ? denotes the parameter required for the SQL query.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4) Add input parameter mapping&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Since we need to have an input parameter for the&amp;nbsp;Data Service&amp;nbsp;lets define it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-ya1p4CEmPnk/T1W-HIg9vyI/AAAAAAAAAsM/JBWUpiffVtE/s1600/input-mapping.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;456&#34; src=&#34;http://2.bp.blogspot.com/-ya1p4CEmPnk/T1W-HIg9vyI/AAAAAAAAAsM/JBWUpiffVtE/s640/input-mapping.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5) Add output Mapping.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There are elements in the output result we need to map. There are four output Mappings we need to define and i following&amp;nbsp;screenshot&amp;nbsp;shows adding one of them.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-0y8fNVFv7TA/T1W-Xk5wApI/AAAAAAAAAsU/r6UxZqwvbYo/s1600/output-mapping.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;512&#34; src=&#34;http://1.bp.blogspot.com/-0y8fNVFv7TA/T1W-Xk5wApI/AAAAAAAAAsU/r6UxZqwvbYo/s640/output-mapping.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;After adding all of them, Here how it looks like.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-HF2nWkygvrQ/T1W-ynTwXzI/AAAAAAAAAsc/68YJr6cywVQ/s1600/input-output.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;274&#34; src=&#34;http://1.bp.blogspot.com/-HF2nWkygvrQ/T1W-ynTwXzI/AAAAAAAAAsc/68YJr6cywVQ/s640/input-output.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6) Click save and go to next page to add new operation. Click on &#34;Add query params as operation params&#34; to add input parameters for operation.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-DuMrf1SBtiU/T1W_RJMdo1I/AAAAAAAAAsk/-K5G7ks_TFk/s1600/add-operation.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;418&#34; src=&#34;http://1.bp.blogspot.com/-DuMrf1SBtiU/T1W_RJMdo1I/AAAAAAAAAsk/-K5G7ks_TFk/s640/add-operation.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;7) Click save and then click finish to deploy the Data Service. After few seconds refresh the&amp;nbsp;web services&amp;nbsp;list to view newly added Data Service.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8) Click on &#34;Try this Service&#34; to test the service. And then test your StoredProcedure exposed as a data service through WSO2 Data Services Server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;(here i have used 1002 as the employeeNo)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-NkNMbw9wzos/T1W_8CFh11I/AAAAAAAAAss/1txLI0pSKIM/s1600/try-it.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;394&#34; src=&#34;http://3.bp.blogspot.com/-NkNMbw9wzos/T1W_8CFh11I/AAAAAAAAAss/1txLI0pSKIM/s640/try-it.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;References.&lt;br /&gt;&lt;br /&gt;[1]&amp;nbsp;&lt;a href=&#34;http://wso2.org/blog/sumedha/2623&#34;&gt;http://wso2.org/blog/sumedha/2623&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;[2]&amp;nbsp;&lt;a href=&#34;http://charithaka.blogspot.com/2010/09/how-to-call-oracle-stored-procedures.html&#34;&gt;http://charithaka.blogspot.com/2010/09/how-to-call-oracle-stored-procedures.html&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Adding JMS transport for WSO2 Data Services Server</title>
      <link>http://localhost:1313/post/adding-jms-transport-for-wso2-data-services-server/</link>
      <pubDate>Thu, 01 Mar 2012 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/adding-jms-transport-for-wso2-data-services-server/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;Pre requisites&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) &lt;a href=&#34;http://wso2.com/products/data-services-server/&#34; target=&#34;_blank&#34;&gt;WSO2 DataServices Server&amp;nbsp;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;2)&lt;a href=&#34;http://activemq.apache.org/&#34; target=&#34;_blank&#34;&gt; Apache ActiveMQ&lt;/a&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) Configuring JMS transport.&lt;/div&gt;&lt;div&gt;&lt;ul style=&#34;text-align: left;&#34;&gt;&lt;li&gt;After extracting Data Services Binary navigate to {DSS-HOME}/repository/conf&lt;/li&gt;&lt;li&gt;Open axis2.xml in your editor&lt;/li&gt;&lt;li&gt;Uncomment the following section&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;for Transport Listner&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre class=&#34;brush:js;&#34;&gt; &amp;lt;!--Uncomment this and configure as appropriate for JMS transport support, after setting up your JMS environment (e.g. ActiveMQ)--&amp;gt;&lt;br /&gt;    &amp;lt;transportReceiver name=&#34;jms&#34; class=&#34;org.apache.axis2.transport.jms.JMSListener&#34;&amp;gt;&lt;br /&gt;        &amp;lt;parameter name=&#34;myTopicConnectionFactory&#34; locked=&#34;false&#34;&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.factory.initial&#34; locked=&#34;false&#34;&amp;gt;org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.provider.url&#34; locked=&#34;false&#34;&amp;gt;tcp://localhost:61616&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryJNDIName&#34; locked=&#34;false&#34;&amp;gt;TopicConnectionFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;  &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryType&#34; locked=&#34;false&#34;&amp;gt;topic&amp;lt;/parameter&amp;gt;&lt;br /&gt;        &amp;lt;/parameter&amp;gt;&lt;br /&gt;&lt;br /&gt;        &amp;lt;parameter name=&#34;myQueueConnectionFactory&#34; locked=&#34;false&#34;&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.factory.initial&#34; locked=&#34;false&#34;&amp;gt;org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.provider.url&#34; locked=&#34;false&#34;&amp;gt;tcp://localhost:61616&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryJNDIName&#34; locked=&#34;false&#34;&amp;gt;QueueConnectionFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;  &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryType&#34; locked=&#34;false&#34;&amp;gt;queue&amp;lt;/parameter&amp;gt;&lt;br /&gt;        &amp;lt;/parameter&amp;gt;&lt;br /&gt;&lt;br /&gt;        &amp;lt;parameter name=&#34;default&#34; locked=&#34;false&#34;&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.factory.initial&#34; locked=&#34;false&#34;&amp;gt;org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;java.naming.provider.url&#34; locked=&#34;false&#34;&amp;gt;tcp://localhost:61616&amp;lt;/parameter&amp;gt;&lt;br /&gt;         &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryJNDIName&#34; locked=&#34;false&#34;&amp;gt;QueueConnectionFactory&amp;lt;/parameter&amp;gt;&lt;br /&gt;  &amp;lt;parameter name=&#34;transport.jms.ConnectionFactoryType&#34; locked=&#34;false&#34;&amp;gt;queue&amp;lt;/parameter&amp;gt;&lt;br /&gt;        &amp;lt;/parameter&amp;gt;&lt;br /&gt;    &amp;lt;/transportReceiver&amp;gt;&lt;/pre&gt;&lt;b&gt;For Transport Sender&lt;/b&gt;&lt;br /&gt;&lt;pre class=&#34;brush:js;&#34;&gt; &amp;lt;!-- uncomment this and configure to use connection pools for sending messages--&amp;gt;&lt;br /&gt;     &amp;lt;transportSender name=&#34;jms&#34; class=&#34;org.apache.axis2.transport.jms.JMSSender&#34;/&amp;gt;&lt;/pre&gt;&lt;ul style=&#34;text-align: left;&#34;&gt;&lt;li&gt;Add the &lt;a href=&#34;http://www.box.com/s/mkv0ea167sz9cqm069m0&#34; target=&#34;_blank&#34;&gt;required jars&lt;/a&gt; to &amp;lt;DSS_HOME&amp;gt;/repository/components/lib folder.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Start ActiveMQ using command &#34;&lt;b&gt;sh &amp;lt;ActiveMQ_HOME&amp;gt;/bin/activemq start&lt;/b&gt;&#34;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;You can explore your ActiveMQ queues for services using JConsole. ( Type Jconsole in linux shell.)&lt;/div&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>